OK, we need to take a fresh approach with the ImageDescriber app. What we have doesn't work for multiple reasons.

1. Use the viewer app as the basis for imagedescriber moved to the image describer directory of course. meaning, we still want the viewer app to stay as a stand-alone program that works with the existing scripts.

2. Again no touching of the existing scripts but no having to rely on them either for the image description experience with the gui-image describer. The workflows for the cmd tools and the gui are fundamentally different.

3. So with the imageDescriber app, we want to load a directory of images and then allow the user to process them individually or in batches with the same hotkeys as we were using before, p to process and b to mark as a batch.

We should have the image list and that should remain. We should have a second list that has the description for each image and if the user does a redescription, then the image would have two descriptions or as many as the user created. Allow for deleting and editing of each description.

Really, I think the only thing we want to share between the scripts and the gui is the prompts.

Rather than having a bunch of buttons in the UI, go with a menued approach so we might have a menu for processing, a menu for promots and such.

Rules of the road:

1. Absolutely no touching of the scripts and that workflow.
2. Do not be constrained on how the workflow for the cmdline tools works though.
3. That said, we need to treat the descriptions and all from this app for each directory of images the user loads, like a doucment in the sense that we don't want to lose any of their work.
4. When we convert videos, we need to put the images into the image list, probably as a nested list of some sort under the video entry.
5. We want the viewer functionality for viewing, copying and such in this app.

Conceptually, this will be a new experience taking what we've learned from the command line tools and such and applying it.


